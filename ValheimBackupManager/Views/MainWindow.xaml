<Window x:Name="window" x:Class="ValheimBackupManager.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ValheimBackupManager.Views"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:s="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d" 
        FontSize="19.5"
        Background="Transparent"
        Foreground="GhostWhite"
        WindowStyle="None"
        AllowsTransparency="True"
        ResizeMode="CanResizeWithGrip"
        MouseDown="Window_MouseDown"
        d:DesignHeight="800"
        d:DesignWidth="700" 
        Height="800" 
        Width="700"
        MinHeight="800"
        MinWidth="1200">

    <Window.Resources>

        <SolidColorBrush x:Key="AppBackground" Color="#FF2D2D30"/>

        <!--BLACK BACKGROUND-->

        <SolidColorBrush x:Key="BB_Background" Color="#FF2D2D30"/>
        <SolidColorBrush x:Key="BB_Borderbrush" Color="GhostWhite"/>
        <SolidColorBrush x:Key="BB_Foreground" Color="GhostWhite"/>
        <SolidColorBrush x:Key="MouseOver_BB_Background" Color="Gray"/>
        <SolidColorBrush x:Key="MouseOver_BB_Borderbrush" Color="#FF2D2D30"/>
        <SolidColorBrush x:Key="MouseOver_BB_Foreground" Color="GhostWhite"/>

        <!--GOLDEN-->

        <SolidColorBrush x:Key="Golden_Background" Color="#FF2D2D30"/>
        <SolidColorBrush x:Key="Golden_Borderbrush" Color="Gold"/>
        <SolidColorBrush x:Key="Golden_Foreground" Color="Gold"/>
        <SolidColorBrush x:Key="MouseOver_Golden_Background" Color="Gray"/>
        <SolidColorBrush x:Key="MouseOver_Golden_Borderbrush" Color="DarkGoldenrod"/>
        <SolidColorBrush x:Key="MouseOver_Golden_Foreground" Color="DarkGoldenrod"/>

        <LinearGradientBrush x:Key="AppBg"
                            StartPoint="0,0"
                            EndPoint="1,1">
            <GradientStop Color="#66FFFFFF" Offset="0"/>
            <GradientStop Color="#1AFFFFFF" Offset="1"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="AppBorderBrush"                             
                            StartPoint="0,1.017" EndPoint="1.024,0">
            <GradientStop Color="White" Offset="0"/>
            <GradientStop Color="#0094B2FF" Offset="0.343446"/>
            <GradientStop Color="#00496BC1" Offset="0.629582"/>
            <GradientStop Color="#577FE5" Offset="1"/>
        </LinearGradientBrush>

        <Border x:Key="AppsBorder"
                Background="Transparent"
                BorderBrush="{StaticResource AppBorderBrush}"
                BorderThickness="2" 
                CornerRadius="16">
        </Border>

        <Style TargetType="Button" x:Key="ButtonStyle">
            <Setter Property="Foreground" Value="{StaticResource BB_Foreground}"/>
            <Setter Property="TextBlock.TextAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="10"
                                Background="{StaticResource BB_Background}"
                                BorderBrush="GhostWhite"
                                BorderThickness="2">
                            <ContentPresenter x:Name="contentPresenter" 
                                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border CornerRadius="10"
                                        Background="{StaticResource MouseOver_BB_Background}"
                                        BorderBrush="{StaticResource MouseOver_BB_Borderbrush}"
                                        BorderThickness="2">
                                    <ContentPresenter x:Name="contentPresenter" 
                                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border CornerRadius="10"
                                        Background="#FF2D2D30"
                                        BorderBrush="#FF2D2D30"
                                        BorderThickness="2">
                                    <ContentPresenter x:Name="contentPresenter" 
                                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="GoldenButtonStyle">
            <Setter Property="Foreground" Value="{StaticResource Golden_Foreground}"/>
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="10"
                                Background="{StaticResource Golden_Background}"
                                BorderBrush="{StaticResource Golden_Borderbrush}"
                                BorderThickness="2">
                            <ContentPresenter x:Name="contentPresenter" 
                                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource MouseOver_Golden_Foreground}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border CornerRadius="10"
                                        Background="{StaticResource MouseOver_Golden_Background}"
                                        BorderBrush="{StaticResource MouseOver_Golden_Borderbrush}"
                                        BorderThickness="2">
                                    <ContentPresenter x:Name="contentPresenter" 
                                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="Tag" Value="Working">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border CornerRadius="10"
                                        Background="{StaticResource MouseOver_Golden_Background}"
                                        BorderThickness="2">
                                    <ContentPresenter x:Name="contentPresenter" 
                                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="SensitiveStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="10"
                                Background="{TemplateBinding Background}"
                                BorderBrush="GhostWhite"
                                BorderThickness="2">
                            <ContentPresenter x:Name="contentPresenter" 
                                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Tag" Value="Selected">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border CornerRadius="10"
                                        Background="#FF5D5D5D"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="2">
                                    <ContentPresenter x:Name="contentPresenter" 
                                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="CloseStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="10"
                                Background="{TemplateBinding Background}"
                                BorderBrush="GhostWhite"
                                BorderThickness="2">
                            <ContentPresenter x:Name="contentPresenter" 
                                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border CornerRadius="10"
                                        Background="#FFB62A2A"
                                        BorderBrush="{StaticResource BB_Borderbrush}"
                                        BorderThickness="2">
                                    <ContentPresenter x:Name="contentPresenter" 
                                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TextBox}" x:Key="RoundedTextBox">
            <Setter Property="Foreground" Value="{StaticResource BB_Foreground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border Background="Transparent" 
                                BorderBrush="GhostWhite"
                                BorderThickness="2" 
                                CornerRadius="10">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style  x:Key="RoundedLabel" TargetType="Label">
            <Setter Property="HorizontalContentAlignment"
                    Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource BB_Foreground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border BorderBrush="{StaticResource BB_Borderbrush}" 
                                BorderThickness="2" 
                                Background="Transparent" 
                                Padding="2" 
                                SnapsToDevicePixels="true" 
                                CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--SCROLLBARS-->

        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" 
                                       VerticalAlignment="Stretch" 
                                       Width="Auto" 
                                       Height="Auto" 
                                       Fill="Transparent"/>
                            <Border x:Name="Rectangle1" 
                                    CornerRadius="5" 
                                    HorizontalAlignment="Stretch" 
                                    VerticalAlignment="Stretch" 
                                    Width="Auto" 
                                    Height="Auto" 
                                    Background="{TemplateBinding Background}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" 
                                     Value="Horizontal">
                                <Setter TargetName="Rectangle1" 
                                        Property="Width" 
                                        Value="Auto"/>
                                <Setter TargetName="Rectangle1" 
                                        Property="Height" 
                                        Value="5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Foreground" Value="{StaticResource BB_Borderbrush}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Width" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="10" Background="{x:Null}">
                            <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="False">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" 
                                               Style="{DynamicResource ScrollThumbs}"/>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="False"/>
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="False"/>
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                <Setter Value="{DynamicResource ButtonSelectBrush}" 
                                            TargetName="Thumb" Property="Background"/>
                            </Trigger>
                            <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background"/>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto"/>
                                <Setter Property="Height" Value="12"/>
                                <Setter TargetName="Thumb" Property="Tag" Value="Horizontal"/>
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand"/>
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" 
                        Name="Border"
                        BorderBrush="{StaticResource BB_Borderbrush}" 
                        CornerRadius="10" 
                        BorderThickness="2" 
                        Background="{StaticResource BB_Background}" />
                <Border Grid.Column="1" 
                        Margin="0,2,2,2" 
                        BorderBrush="{StaticResource BB_Borderbrush}" 
                        Name="ButtonBorder"
                        CornerRadius="0,10,10,0" 
                        BorderThickness="2,0,0,0" 
                        Background="{StaticResource BB_Background}" />

                <Path Name="Arrow" Grid.Column="1" 
                      Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                      HorizontalAlignment="Center" 
                      Fill="Gray"
                      VerticalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" 
                         Value="True">
                    <Setter Property="Panel.Background" 
                            TargetName="ButtonBorder" 
                            Value="{StaticResource MouseOver_BB_Background}"/>
                    <Setter Property="Shape.Fill" 
                            TargetName="Arrow" 
                            Value="{StaticResource MouseOver_BB_Borderbrush}"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" 
                         Value="True">
                    <Setter Property="Panel.Background" 
                            TargetName="ButtonBorder" 
                            Value="{StaticResource MouseOver_BB_Background}"/>
                    <Setter Property="Shape.Fill" 
                            TargetName="Arrow" 
                            Value="{StaticResource MouseOver_BB_Borderbrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatStyle"  
               TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" 
                    Value="True"/>
            <Setter Property="FrameworkElement.OverridesDefaultStyle" 
                    Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                    Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" 
                    Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" 
                    Value="True"/>
            <Setter Property="TextElement.Foreground" 
                    Value="{StaticResource BB_Foreground}"/>
            <Setter Property="FrameworkElement.FocusVisualStyle" 
                    Value="{x:Null}"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" 
                                          Grid.Column="2"
                                          ClickMode="Press" 
                                          Focusable="False"
                                          IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                          Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                            <ContentPresenter Name="ContentSite" 
                                              Margin="5, 3, 23, 3" 
                                              IsHitTestVisible="False"
                                              HorizontalAlignment="Left" 
                                              VerticalAlignment="Center"                              
                                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox Name="PART_EditableTextBox" 
                                     Margin="3, 3, 23, 3"                     
                                     IsReadOnly="{TemplateBinding IsReadOnly}"
                                     Visibility="Hidden"
                                     Background="Transparent"
                                     HorizontalAlignment="Left" 
                                     VerticalAlignment="Center"
                                     Focusable="True">
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox" >
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" 
                                   Placement="Bottom"
                                   Focusable="False" 
                                   AllowsTransparency="True"
                                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                      MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" 
                                            Background="{StaticResource BB_Background}" 
                                            Margin="0"
                                            CornerRadius="10" 
                                            BorderThickness="2" 
                                            BorderBrush="{StaticResource BB_Borderbrush}"/>
                                    <ScrollViewer Margin="4" 
                                                  SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" 
                                     Value="False">
                                <Setter Property="FrameworkElement.MinHeight" 
                                        TargetName="DropDownBorder" 
                                        Value="95"/>
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" 
                                     Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" 
                                        Value="False"/>
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" 
                                     Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" 
                                        Value="False"/>
                                <Setter Property="UIElement.Visibility" 
                                        TargetName="PART_EditableTextBox" 
                                        Value="Visible"/>
                                <Setter Property="UIElement.Visibility" 
                                        TargetName="ContentSite" 
                                        Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FinishedWindow" TargetType="{x:Type Window}">
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
            <Setter Property="Foreground" Value="{StaticResource BB_Foreground}"/>
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="0"
                                  CornerRadius="20"
                                  GlassFrameThickness="0"
                                  NonClientFrameEdges="None"
                                  ResizeBorderThickness="5"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Grid>
                            <Border Background="{StaticResource BB_Background}" 
                                    BorderBrush="{StaticResource BB_Borderbrush}" 
                                    BorderThickness="4,4,6,6" 
                                    CornerRadius="12">
                                <Border.Effect>
                                    <BlurEffect  KernelType="Gaussian" 
                                                 Radius="12" 
                                                 RenderingBias="Quality" />
                                </Border.Effect>
                            </Border>
                            <Border BorderBrush="{StaticResource BB_Borderbrush}" 
                                    BorderThickness="2" 
                                    CornerRadius="12" 
                                    ClipToBounds="True">
                            </Border>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="32"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title}" 
                                              Foreground="{StaticResource BB_Foreground}"
                                              Grid.Row="0"
                                              HorizontalAlignment="Center" 
                                              VerticalAlignment="Bottom"
                                              FontWeight="Bold"
                                              FontSize="16"
                                         />
                                <Button Name="CloseButton" 
                                        Width="20" Height="20"   
                                        Grid.Row="0"
                                        HorizontalAlignment="Right"
                                        BorderThickness="0"
                                        Margin="0,12,12,0"
                                        Style="{StaticResource CloseStyle}"/>
                                <ContentPresenter Grid.Row="1" 
                                                  Margin="12"/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>


    <Border BorderThickness="2"
            BorderBrush="GhostWhite"
            CornerRadius="15,15,0,15"
            Background="#FF2D2D30"
            MouseDown="Window_MouseDown">

        <!--format-letter-case-->

        <Grid x:Name="MainGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="10"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="10"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="10"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="10"/>
            </Grid.ColumnDefinitions>

            <!--ENTETE-->
            
            <Grid Grid.Row="1"
                  Grid.Column="1"
                  Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="40"/>
                </Grid.ColumnDefinitions>

                <Label Foreground="GhostWhite"
                       Margin="2"
                       Content="{Binding WindowTitle}"
                       HorizontalContentAlignment="Center"
                       HorizontalAlignment="Stretch"
                       Panel.ZIndex="10"/>

                <Button x:Name="MinimizeButton"
                        Grid.Column="1"
                        Click="MinimizeButton_Click"
                        Style="{StaticResource ButtonStyle}">

                    <materialDesign:PackIcon Kind="WindowMinimize"
                                             Foreground="White"
                                             Height="30" 
                                             Width="30" 
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"/>
                    
                </Button>

                <Button x:Name="MaximizeButton"
                        Grid.Column="3"
                        Click="MaximizeButton_Click"
                        Style="{StaticResource ButtonStyle}">

                    <materialDesign:PackIcon x:Name="MaximizeButtonImage"
                                             Kind="WindowMaximize"
                                             Foreground="White"
                                             Height="30" 
                                             Width="30" 
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"/>
                    
                </Button>

                <Button x:Name="ShutDownButton"
                        Grid.Column="5"
                        Click="ShutDownButton_Click"
                        Style="{StaticResource CloseStyle}"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center">

                    <materialDesign:PackIcon Kind="WindowClose"
                                             Foreground="White"
                                             Height="30" 
                                             Width="30" 
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"/>

                </Button>

            </Grid>

            <Grid Grid.Row="3"
                  Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="250"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="250"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid Grid.Column="1"
                      Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="10"/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="40"/>
                        <RowDefinition Height="10"/>
                    </Grid.RowDefinitions>

                    <Label Grid.Row="0"
                           Grid.Column="0"
                           Style="{StaticResource RoundedLabel}"
                           Content="Emplacement Valheim :"/>

                    <Label Grid.Row="2"
                           Grid.Column="0"
                           Style="{StaticResource RoundedLabel}"
                           Content="Emplacement sauvegarde :"/>

                    <Label Grid.Row="4"
                           Grid.Column="0"
                           Style="{StaticResource RoundedLabel}"
                           Content="Intervalle des sauvegardes :"/>

                    <Grid Grid.Column="2"
                          Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="40"/>
                        </Grid.ColumnDefinitions>

                        <TextBox Style="{StaticResource RoundedTextBox}"
                                 Text="{Binding GameFolder}"/>

                        <Button Grid.Column="2"
                                Style="{StaticResource ButtonStyle}"
                                Command="{Binding BrowseGameFolder}">
                            <materialDesign:PackIcon Kind="DotsHorizontal"
                                                     Foreground="White"
                                                     Height="30" 
                                                     Width="30" 
                                                     HorizontalAlignment="Center"
                                                     VerticalAlignment="Center"/>
                        </Button>

                    </Grid>

                    <Grid Grid.Column="2"
                          Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="40"/>
                        </Grid.ColumnDefinitions>

                        <TextBox Style="{StaticResource RoundedTextBox}"
                                 Text="{Binding UserFolder}"/>

                        <Button Grid.Column="2"
                                Style="{StaticResource ButtonStyle}"
                                Command="{Binding BrowseUserFolder}">
                            <materialDesign:PackIcon Kind="DotsHorizontal"
                                                     Foreground="White"
                                                     Height="30" 
                                                     Width="30" 
                                                     HorizontalAlignment="Center"
                                                     VerticalAlignment="Center"/>
                        </Button>

                    </Grid>

                    <Grid Grid.Column="2"
                          Grid.Row="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="200"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Label Style="{StaticResource RoundedLabel}"
                               Content="{Binding Number}"/>

                        <ComboBox Grid.Column="2"
                                  Style="{StaticResource ComboBoxFlatStyle}"
                                  SelectedItem="{Binding TimeUnit}">
                            <s:String>Secondes</s:String>
                            <s:String>Minutes</s:String>
                            <s:String>Heures</s:String>
                        </ComboBox>

                        <Button Grid.Column="4"
                                Style="{StaticResource ButtonStyle}"
                                Command="{Binding Decrease60Time}">
                            <materialDesign:PackIcon Kind="Rewind60"
                                                     Foreground="Red"
                                                     Height="30" 
                                                     Width="30" 
                                                     HorizontalAlignment="Center"
                                                     VerticalAlignment="Center"/>
                        </Button>

                        <Button Grid.Column="6"
                                Style="{StaticResource ButtonStyle}"
                                Command="{Binding Decrease10Time}">
                            <materialDesign:PackIcon Kind="Rewind10"
                                                     Foreground="Red"
                                                     Height="30" 
                                                     Width="30" 
                                                     HorizontalAlignment="Center"
                                                     VerticalAlignment="Center"/>
                        </Button>

                        <Button Grid.Column="8"
                                Style="{StaticResource ButtonStyle}"
                                Command="{Binding DecreaseTime}">
                            <materialDesign:PackIcon Kind="Minus"
                                                     Foreground="Red"
                                                     Height="30" 
                                                     Width="30" 
                                                     HorizontalAlignment="Center"
                                                     VerticalAlignment="Center"/>
                        </Button>

                        <Button Grid.Column="10"
                                Style="{StaticResource ButtonStyle}"
                                Command="{Binding IncreaseTime}">
                            <materialDesign:PackIcon Kind="Plus"
                                                     Foreground="Green"
                                                     Height="30" 
                                                     Width="30" 
                                                     HorizontalAlignment="Center"
                                                     VerticalAlignment="Center"/>
                        </Button>

                        <Button Grid.Column="12"
                                Style="{StaticResource ButtonStyle}"
                                Command="{Binding Increase10Time}">
                            <materialDesign:PackIcon Kind="FastForward10"
                                                     Foreground="Green"
                                                     Height="30" 
                                                     Width="30" 
                                                     HorizontalAlignment="Center"
                                                     VerticalAlignment="Center"/>
                        </Button>

                        <Button Grid.Column="14"
                                Style="{StaticResource ButtonStyle}"
                                Command="{Binding Increase60Time}">
                            <materialDesign:PackIcon Kind="FastForward60"
                                                     Foreground="Green"
                                                     Height="30" 
                                                     Width="30" 
                                                     HorizontalAlignment="Center"
                                                     VerticalAlignment="Center"/>
                        </Button>

                    </Grid>

                    <Button Grid.Row="8"
                            Grid.ColumnSpan="3"
                            Width="150"
                            Style="{StaticResource GoldenButtonStyle}"
                            Tag="{Binding WorkingTag}"
                            Command="{Binding SwitchWorkingMode}">

                        <materialDesign:PackIcon Kind="RocketLaunch"
                                                 Height="30" 
                                                 Width="30" 
                                                 HorizontalAlignment="Center"
                                                 VerticalAlignment="Center"/>
                    </Button>

                </Grid>

                <Image Stretch="Fill" 
                       Source="/Resources/ValheimBackupManager_512px.png" 
                       Margin="5"/>

                <ScrollViewer Grid.ColumnSpan="2"
                              Grid.Row="1"
                              BorderBrush="{StaticResource BB_Borderbrush}"
                              BorderThickness="2">

                    <RichTextBox Background="Transparent"
                                 Foreground="{StaticResource BB_Foreground}">
                        <FlowDocument >
                            <Paragraph>
                                <Run Text="{Binding Log, Mode=TwoWay}"/>
                            </Paragraph>
                        </FlowDocument>

                    </RichTextBox>
                    
                </ScrollViewer>
                
            </Grid>

        </Grid>
    </Border>



</Window>